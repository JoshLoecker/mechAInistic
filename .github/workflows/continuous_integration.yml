name: Continuous Integration
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4


      - name: Check Format
        uses: astral-sh/ruff-action@v1
        with:
          args: "format --check --verbose"

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Lint
        uses: astral-sh/ruff-action@v1
        with:
          args: "check --no-fix --verbose"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: "true"
          cache-suffix: "${{ matrix.python-version }}"
          cache-dependency-glob: 'uv.lock'

      - name: Install Dependencies
        run: uv sync --python "${{ matrix.python-version }}" --all-extras --dev

      - name: Run tests
        run: uv run --python "${{ matrix.python-version }}" pytest --cov --cov-report=xml

      - name: Upload Coverage to CodeCov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml

      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_TOKEN }}
          coverage-reports: coverage.xml